
<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<meta name="description" content="">
		<meta name="author" content="">

		<title>CS205 Final Project Website</title>

		<!-- Bootstrap core CSS -->
		<link href="./bootstrap-3.3.1/css/bootstrap.min.css" rel="stylesheet">
		
		<!-- Bootstrap core CSS -->
		<link href="./bootstrap-3.3.1/css/bootstrap.icon-large.min.css" rel="stylesheet">
		
		<!-- Custom styles for the homepage -->
		<link href="./css/main.css" rel="stylesheet">

		<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
		    <!--[if lt IE 9]>
		      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
		        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
		        <![endif]-->
	</head>

<body>
<!-- Fixed navbar -->
<nav class="navbar navbar-default navbar-fixed-top">
  <div class="container-fluid">
    <div class="navbar-header">
		<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-responsive-collapse">
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
		  </button>
      <a class="navbar-brand" href="./index.htm">HOME</a>
    </div>
    <div class="navbar-collapse collapse navbar-responsive-collapse">
      <ul class="nav navbar-nav">
        <li><a href="./background.htm">BACKGROUND</a></li>
		<li class="dropdown">
			<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">ALGORITHMS <span class="caret"></span></a>
				<ul class="dropdown-menu" role="menu">
					<li><a href="./serial.htm">SERIAL</a></li>
					<li><a href="./parallel.htm">PARALLEL</a></li>
				</ul>
		</li>
		<li><a href="./code.htm">CODE</a></li>
        <li><a href="./results.htm">RESULTS</a></li>
        <li><a href="./next_steps.htm">NEXT STEPS</a></li>
      </ul>
      <ul class="nav navbar-nav navbar-right">
		<li><a href="./contact.htm">ABOUT THE AUTHORS</a></li> 
      </ul>
    </div>
  </div>
</nav>

<!-- Content -->
<!-- Collapsible Bar -->
<!-- Add Padding -->
	</br>
	</br>
	</br>
	</br>
<div class="container">
<div class="container">
	<h3>Data</h3>
	<p>The data used in our benchmarking study are two randomly generated DNA sequences (generated from <a href="http://www.faculty.ucr.edu/~mmaduro/random.htm">here</a>), each of length 1000 represented by bases C, G, A, and T. We used a MacBook Pro with an NVIDIA GPU to run the benchmarks.</p>

	<h3>Results</h3>
  	<p>Below is a chart showing the speed-ups of the parallel algorithms using a local buffer size of 32 by 32, or 1,024 workers, over the serial dynamic programming implementation using numpy. As expected, coalesced memory access achieved higher speedup at 13 times versus non-coalesced memory access at 11.5 times. Surprisingly, block-wise parallel with serial within-block updates achieved the fastest speed up at almost 16 times. Given that we initialized the same number of workers across all parallel algorithms in this study, this outperformance could very well be hardware-dependent. We suspect that it likely stems from serialized reads when multiple threads access the same location in global memory in other parallel within block implementations.</p>

	<div class="container" align="center"> 
	 	<img src="./img/results_one.png" width = "600" height = "480" alt="edits" class="img-responsive" /> 
	</div> 
	</br>

	<p>We also explored different buffer size configurations using the coelasced block read/write implememtation. As shown below, the larger the size of the workgroup, the higher the speed-up from 8 by 8 to 32 by 32. On the other hand, 32 by 32 is faster than both 16 by 64 and 64 by 16. This is likely due to the fact that the alignment matrix of our test case is a perfect square and a workgroup arranged in a square could be positioned nicely along the anti-diagonals to achive more parallelism. Finally, we found that bank conflicts are not a big issue with the parallel implementations, since it is unlikely for the threads to access the same column at the same time.</p>


	<div class="container" align="center"> 
	 	<img src="./img/results_two.png" width = "600" height = "480" alt="edits" class="img-responsive" /> 
	</div>
</div>

</br>
</br>
</br>

<!-- Bootstrap core JavaScript. Placed at the end of the document so the pages load faster. -->
<script src="./js/jquery-1.11.1.min.js"></script>
<script src="./bootstrap-3.3.1/js/bootstrap.min.js"></script>

</body>
</html>
